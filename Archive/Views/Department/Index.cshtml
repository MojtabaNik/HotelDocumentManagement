@using Archive.ViewModel;
@using DBProvider
@model DepartementViewModel

@{
    ViewBag.Title = "ویرایش ‍‍واحد ها";
}

@section BowerComponents{
    <link href="~/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css" rel="stylesheet">
    <link href="~/vendors/bower_components/nouislider/distribute/jquery.nouislider.min.css" rel="stylesheet">
    <link href="~/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet">
    <link href="~/vendors/farbtastic/farbtastic.css" rel="stylesheet">
    <link href="~/vendors/bower_components/chosen/chosen.min.css" rel="stylesheet">
    <link href="~/vendors/summernote/dist/summernote.css" rel="stylesheet">


}
@section HeadCss{
    <link href="~/css/KendoUI/kendo.common.min.css" rel="stylesheet" />
    <link href="~/css/KendoUI/kendo.rtl.min.css" rel="stylesheet">
    <link href="~/css/KendoUI/kendo.default.min.css" rel="stylesheet">
    <link href="~/css/KendoUI/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="~/css/KendoUI/kendo.dataviz.default.min.css" rel="stylesheet" />

    <style>
        .fileinput .thumbnail {
            right: -40px;
        }
    </style>
    <style>
        g {
            cursor: pointer;
        }

        .node circle {
            fill: #fff !important;
            stroke: steelblue;
            stroke-width: 3px;
        }

        g text {
            font: 19px IRANSans;
            /*direction: ltr;*/
        }

        .link {
            fill: none;
            stroke: #ccc;
            stroke-width: 2px;
        }

        Cases svg {
            display: block;
            margin: 0 auto;
        }

        html {
            overflow-x: hidden;
        }
    </style>

    <link href="~/Content/getorgchart.css" rel="stylesheet" />
}




<form action="~/Department/Add" method="post">
    <div class="row m-t-25 p-0 m-b-25">
        <div class="col-sm-4">
            <div class="input-group fg-float">
                <span class="input-group-addon"><i class="zmdi zmdi-account"></i></span>
                <div class="fg-line">
                    <input id="DepartmentName" name="Name" type="text" class="form-control">
                    <label class="fg-label">نام واحد جدید</label>
                </div>
            </div>
        </div>
        @*<div class="col-sm-4">
                <div class="input-group fg-float">
                    <span class="input-group-addon"><i class="zmdi zmdi-account"></i></span>
                    <div class="fg-line">
                        <input name="ParentName" type="text" class="form-control">
                        <label class="fg-label">نام واحد والد </label>
                    </div>
                </div>
            </div>*@
        @*<div class="col-xs-4">
                <select name="ParentDepartmentGUID" class="selectpicker" data-live-search="true" data-none-selected-text="هیچ گزینه ای انتخاب نشده است" data-no-results-matched="هیچ سازمانی یافت نشد">
                    @foreach (var department in Model.Departements)
                    {
                        <option value="@department.Id">@department.Name</option>
                    }
                </select>
            </div>
            <div class="col-sm-4">
                <div class="input-group fg-float">
                    <span class="input-group-addon"></span>
                    <div class="fg-line">

                        <button type="submit" class="btn bgm-red btn-lg waves-effect">ایجاد واحد جدید</button>
                    </div>
                </div>
            </div>*@
    </div>
    <div class="row">
        <div class="col-xs-12 tree-view-box">
            <div class="demo-section k-content">
                <div>

                    <div id="treeview2"></div>
                    <input id="ParentDepartmentGUID" name="ParentDepartmentGUID" type="hidden" value="@Model.DepartmentString" />
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div class="row ">
        <div class="col-sm-4"></div>
        <div class="col-sm-4 center-block">
            <div class="input-group fg-float">
                <span class="input-group-addon"></span>
                <div class="fg-line">

                    <button id="sendForm" type="submit" class="btn bgm-red btn-lg waves-effect">ایجاد سازمان جدید</button>
                </div>
            </div>
        </div>
    </div>
    <br />
    <hr class="hr-color" />
    <br />
</form>

@*<form action="~/Case/Add" method="post" enctype="multipart/form-data">

    </form>*@


<table id="data-table-command" class="table table-striped table-vmiddle" data-align="right">
    <thead>
        <tr>
            <th data-column-id="id" data-identifier="true" data-order="asc" data-visible="false">شماره پوشه</th>
            <th data-column-id="sender">نام واحد</th>
            <th data-column-id="date">تاریخ ایجاد</th>
            <th data-column-id="description">نام والد</th>
            <th data-column-id="commands" data-formatter="commands" data-searchable="false" data-visible-in-selection="false" data-sortable="false"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Departements)
        {
            <tr>
                <td>@item.Id</td>

                <td>

                    @item.Name

                </td>




                @*<td>@{item.ParentReceiveLetter != null ? item.ParentReceiveLetter.Id : 0}</td>*@

                <td>@(((DateTime)item.TimeStamp).ToPersianTime()) </td>

                @if (item.ParentDepartement != null)
                {
                    <td>@item.ParentDepartement.Name</td>
                }
                else
                {
                    <td>بدون والد</td>
                }
            </tr>
        }
    </tbody>
</table>






<table id="orgChartData" style="display: none;">
    <tr>
        <th>id</th>
        <th>parent</th>
        <th>name</th>
    </tr>
    @{
        Html.RenderAction("getWhileLoopData");
    }
</table>

<div id="people" tabindex="1"></div>


@section Scripts{


    @*<script src="~/vendors/bower_components/typeahead.js/dist/typeahead.bundle.min.js"></script>
        <script src="~/vendors/summernote/dist/summernote-updated.min.js"></script>*@


    <script src="~/vendors/bower_components/chosen/chosen.jquery.min.js"></script>
    <script src="~/vendors/fileinput/fileinput.min.js"></script>
    <script src="~/vendors/input-mask/input-mask.min.js"></script>
    <script src="~/vendors/farbtastic/farbtastic.min.js"></script>

    <script src="~/vendors/bootgrid/jquery.bootgrid.updated.min.js"></script>




}

@section OurScripts{
    <script src="~/js/kendo.all.min.js"></script>

    <script>
        $(function() {
            $("#sendForm")
                .click(function() {
                    $("#Summary").val(htmlEncode($(".note-editable").html()));
                    return true;
                });
        });

        function htmlEncode(value) {
            return $('<div/>').text(value).html();
        }


    </script>


    <script src="~/js/getorgchart.js"></script>
    <script src="~/js/jquery.mousewheel.js"></script>


    <script type="text/javascript">
        $("#people")
            .getOrgChart({
                // themes:annabel,belinda,cassandra,deborah,lena,monica,eve,vivian,helen
                theme: "annabel",
                orientation: getOrgChart.RO_TOP,
                color: "lightblue",
                // این کد برای وارد شدن به صفحه ویرایش است
                clickEvent: function(sender, args) {
                    if (args.parentId !== "") {
                        window.location = '/Department/Edit/' + args.id;
                    }
                    return false;
                },
                primaryColumns: ["name"],
                //این برای نوع خطوط هست دو نوع هست M,B
                linkType: "B",
                // load data from html table
                dataSource: document.getElementById("orgChartData"),

            });
    </script>
    <script type="text/javascript">

        $(document)
            .ready(function() {
                $(".get-add")
                    .attr("href", "AddRole.aspx")
                    .click(function() {
                        $("body").html("");
                    });

                var isCtrl = false;

                $(".get-oc-c svg")
                    .mousemove(function() {
                        $("#people")
                            .focus()
                            .keydown(function(e) {
                                if (e.which === 17) {
                                    isCtrl = e.type === 'keydown' ? true : false;
                                }
                            })
                            .keyup(function(e) {
                                if (e.which === 17) {
                                    isCtrl = e.type === 'keydown' ? true : false;
                                }
                            });
                    });

                //KeyDown
                $(".get-oc-c svg")
                    .mousewheel(function(e) {
                        if (isCtrl) {
                            return true;
                        } else {
                            return false;
                        }
                    });


                //make mouse pointer
                $(".get-oc-c svg g")
                    .mouseover(function() {
                        $(this).css({ "cursor": "pointer" })
                    });
                $("#DepartmentName").focus();

            });


        $(document)
            .ready(function() {
                //Command Buttons
                $("#data-table-command")
                    .bootgrid({
                        css: {
                            icon: 'zmdi icon',
                            iconColumns: 'zmdi-view-module',
                            iconDown: 'zmdi-expand-more',
                            iconRefresh: 'zmdi-refresh',
                            iconUp: 'zmdi-expand-less'
                        },
                        formatters: {
                            "commands": function(column, row) {
                                if (row.description === "بدون والد") {
                                    return "";
                                }
                                return "<button type=\"button\" class=\"btn btn-icon command-edit waves-effect waves-circle\" data-row-id=\"" +
                                    row.id +
                                    "\"><span class=\"zmdi zmdi-edit\"></span></button> " +
                                    "<button type=\"button\" class=\"btn btn-icon command-delete waves-effect waves-circle\" data-row-id=\"" +
                                    row.id +
                                    "\"><span class=\"zmdi zmdi-delete\"></span></button>";
                            }
                        },
                        labels: {
                            noResults: "!!هیچ موردی یافت نشد",
                            infos: "نمایش {{ctx.start}} تا {{ctx.end}} از {{ctx.total}}",
                            search: "جستجو",
                            all: "نمایش همه"
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid",
                        function() {

                            $("button.command-edit")
                                .click(function() {
                                    window.location = "/Department/Edit/" + $(this).data("row-id");
                                });
                        });


                //Handle Tree View

                // function that gathers IDs of checked nodes- this function is shared between all tree views
                function checkedNodeIds(nodes, checkedNodes) {
                    for (var i = 0; i < nodes.length; i++) {
                        if (nodes[i].checked) {
                            checkedNodes.push(nodes[i].id);
                        }

                        if (nodes[i].hasChildren) {
                            checkedNodeIds(nodes[i].children.view(), checkedNodes);
                        }
                    }
                }

                //bind json to department tree from server
                var json2 = @Html.Raw(Model.DepartmentJson);
                //initialize department tree
                $("#treeview2")
                    .kendoTreeView({
                        checkboxes: true,

                        check: onCheck2,

                        dataSource: json2
                    });


                // show checked node IDs on datasource change
                function onCheck2(e) {
                    var checkedNodes = [],
                        treeView = $("#treeview2").data("kendoTreeView"),
                        message;

                    checkedNodeIds(treeView.dataSource.view(), checkedNodes);

                    var dataItem = this.dataItem(e.node);

                    //Quick Fix for 1 selected item
                    checkedNodes = [dataItem.id];

                    var rootNodes = $("#treeview2").getKendoTreeView().dataSource.data();

                    traverse(rootNodes,
                        function(node) {
                            if (node != dataItem) {
                                node.set("checked", false);
                            }
                        });


                    $("#sendForm")
                        .click(function() {
                            $("#ParentDepartmentGUID").val(checkedNodes);
                            return true;
                        });


                }

                function traverse(nodes, callback) {
                    for (var i = 0; i < nodes.length; i++) {
                        var node = nodes[i];
                        var children = node.hasChildren && node.children.data();

                        callback(node);

                        if (children) {
                            traverse(children, callback);
                        }
                    }
                }

                $("#sendForm").click(function() {
                    if ($("#DepartmentName").val().trim() == "") {
                        alert("لطفا نام دپارتمان را وارد نمایید.");
                        return false;
                    }

                    if ($("#ParentDepartmentGUID").val()=="") {
                        alert("لطفا والد دپارتمان را انتخاب نمایید.");
                        return false;
                    } 

                   
                });


            });
    </script>
    <style>
        #treeview1 {
            height: 630px;
            padding: 10px;
        }

        #treeview2 {
            /*height: 630px;*/
            padding: 10px;
        }

        #treeview1 .k-sprite, #treeview2 .k-sprite {
            background-image: url("../img/coloricons-sprite.png");
        }

        .rootfolder {
            background-position: 0 0;
        }

        .folder {
            background-position: 0 -16px;
        }

        .pdf {
            background-position: 0 -32px;
        }

        .html {
            background-position: 0 -48px;
        }

        .image {
            background-position: 0 -64px;
        }

        .demo-section {
            direction: ltr;
        }

        .my-table-responsive {
            height: 650px;
        }

        .demo-section #treeview1, .demo-section #treeview2 {
            background-color: #f4f4f4;
        }


        /* RTL TreeView*/
        #treeview1, #treeview2 {
            direction: rtl;
        }

        .k-icon.k-minus, .k-icon.k-plus {
            margin-left: 0;
        }

        .k-group > .k-item {
            margin-right: 16px !important;
        }

        .k-group > .k-item.k-first.k-last {
            margin-right: 0 !important;
        }

        .k-group .k-item .k-group {
            margin-right: 16px;
        }

        .k-item.k-first.k-last .k-top {
            margin-right: 0;
        }

        .k-treeview1 .k-sprite, .k-treeview1 .k-image {
            margin-left: 5px;
        }
    </style>

}


