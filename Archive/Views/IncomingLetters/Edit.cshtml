@using Archive.ViewModel;
@using DBProvider
@model EditIncomingLettersViewModel

@{
    ViewBag.Title = "ویرایش نامه ورودی";
}

@section BowerComponents{
    <link href="~/vendors/bower_components/animate.css/animate.min.css" rel="stylesheet">
    <link href="~/vendors/bower_components/bootstrap-sweetalert/lib/sweet-alert.css" rel="stylesheet">
    <link href="~/vendors/bower_components/material-design-iconic-font/dist/css/material-design-iconic-font.min.css" rel="stylesheet">
    <link href="~/vendors/bower_components/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.min.css" rel="stylesheet">
    <link href="~/vendors/bootgrid/jquery.bootgrid.min.css" rel="stylesheet">
    <link href="~/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css" rel="stylesheet">
    <link href="~/vendors/bower_components/nouislider/distribute/jquery.nouislider.min.css" rel="stylesheet">
    <link href="~/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet">
    <link href="~/vendors/farbtastic/farbtastic.css" rel="stylesheet">
    <link href="~/vendors/bower_components/chosen/chosen.min.css" rel="stylesheet">
    <link href="~/vendors/summernote/dist/summernote.css" rel="stylesheet">
}

@section HeadCss {
    <link href="~/css/KendoUI/kendo.common.min.css" rel="stylesheet" />
    <link href="~/css/KendoUI/kendo.rtl.min.css" rel="stylesheet">
    <link href="~/css/KendoUI/kendo.default.min.css" rel="stylesheet">
    <link href="~/css/KendoUI/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="~/css/KendoUI/kendo.dataviz.default.min.css" rel="stylesheet" />
    <style>
        /*Fix Problem of Bootgrid row click*/
        .bootgrid-table td.select-cell .select-box, .bootgrid-table th.select-cell .select-box {
            display: none;
        }

        #data-table-selection tr {
            cursor: pointer;
        }

        #data-table-selection-Department {
            cursor: pointer;
        }

        .margin-top-20 {
            margin-top: 15px;
        }
    </style>
}

<form action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" name="ReceivedLetter.Id" value="@Model.ReceivedLetter.Id" />
    <div class="row m-t-25 p-0 m-b-25">
        <div class="col-xs-12 ">
            <div class="row">
                <div class="row">
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">پرونده ها</p>

                        <select name="CasesGuid" id="SelectedCases" class="selectpicker" multiple data-live-search="true" data-none-selected-text="هیچ گزینه ای انتخاب نشده است" data-no-results-matched="هیچ سازمانی یافت نشد">
                            @foreach (var Case in Model.Cases)
                            {
                                if (Case.ParentCase == null)
                                {
                                    continue;
                                }
                                if (Model.ReceivedLetter.Cases.Any(x => x.Id == Case.Id))
                                {
                                    <option selected="selected" value="@Case.Id">@Case.Name</option>
                                }
                                else
                                {
                                    <option value="@Case.Id">@Case.Name</option>
                                }
                            }
                        </select>
                        @*<input type="hidden" name="SelectedCasesGuidString" id="InputCases" />*@
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black"> نوع نامه </p>

                        <select name="ReceivedLetter.Assortment.LetterType" class="selectpicker">
                            @switch (Model.ReceivedLetter.Assortment.LetterType)
                            {
                                case 0:
                                    <option selected="selected" value="0">شخصی</option>
                                    <option value="1">اداری</option>
                                    break;
                                case LetterType.Administartive:
                                    <option value="0">شخصی</option>
                                    <option selected="selected" value="1">اداری</option>
                                    break;
                                default:
                                    <option value="0">شخصی</option>
                                    <option value="1">اداری</option>
                                    break;
                            }
                        </select>
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">سطح امنیت</p>

                        <select name="ReceivedLetter.Assortment.Security" class="selectpicker" اداری>
                            @switch (Model.ReceivedLetter.Assortment.Security)
                            {
                                case Security.Secret:
                                    <option selected="selected" value="0">محرمانه</option>
                                    <option value="1">فوق محرمانه</option>
                                    <option value="2">سری </option>
                                    <option value="3">به کلی سری</option>
                                    break;
                                case Security.VerySecret:
                                    <option value="0">محرمانه</option>
                                    <option selected="selected" value="1">فوق محرمانه</option>
                                    <option value="2">سری </option>
                                    <option value="3">به کلی سری</option>
                                    break;
                                case Security.Arcane:
                                    <option value="0">محرمانه</option>
                                    <option value="1">فوق محرمانه</option>
                                    <option selected="selected" value="2">سری </option>
                                    <option value="3">به کلی سری</option>
                                    break;
                                case Security.WholeArcane:
                                    <option value="0">محرمانه</option>
                                    <option value="1">فوق محرمانه</option>
                                    <option value="2">سری </option>
                                    <option selected="selected" value="3">به کلی سری</option>
                                    break;
                                default:
                                    <option value="0">محرمانه</option>
                                    <option value="1">فوق محرمانه</option>
                                    <option value="2">سری </option>
                                    <option value="3">به کلی سری</option>
                                    break;
                            }
                        </select>
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">اعتبار قانونی</p>
                        <select name="ReceivedLetter.Assortment.Legalvalidity" class="selectpicker">
                            @switch (Model.ReceivedLetter.Assortment.Legalvalidity)
                            {
                                case Legalvalidity.Normal:
                                    <option selected="selected" value="0">عادی</option>
                                    <option value="1">قانونی</option>
                                    break;
                                case Legalvalidity.Legal:
                                    <option value="0">عادی</option>
                                    <option selected="selected" value="1">قانونی</option>
                                    break;
                                default:
                                    <option value="0">عادی</option>
                                    <option value="1">قانونی</option>
                                    break;
                            }

                        </select>
                    </div>
                    <div class="col-sm-3">
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">ماهیت</p>
                        <select name="ReceivedLetter.Assortment.Nature" class="selectpicker dropdown-menu-right">
                            @switch (Model.ReceivedLetter.Assortment.Nature)
                            {
                                case Nature.Imperative:
                                    <option selected="selected" value="0">دستوری</option>
                                    <option value="1">خبری</option>
                                    <option value="2">درخواستی</option>
                                    break;
                                case Nature.Predicative:
                                    <option value="0">دستوری</option>
                                    <option selected="selected" value="1">خبری</option>
                                    <option value="2">درخواستی</option>
                                    break;
                                case Nature.Benedictory:
                                    <option value="0">دستوری</option>
                                    <option value="1">خبری</option>
                                    <option selected="selected" value="2">درخواستی</option>
                                    break;
                                default:
                                    <option value="0">دستوری</option>
                                    <option value="1">خبری</option>
                                    <option value="2">درخواستی</option>
                                    break;
                            }

                        </select>
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">اولویت</p>
                        <select name="ReceivedLetter.Assortment.Priority" class="selectpicker">
                            @switch (Model.ReceivedLetter.Assortment.Priority)
                            {
                                case Priority.Normal:
                                    <option selected="selected" value="0">عادی</option>
                                    <option value="1">سریع</option>
                                    <option value="2">فوری</option>
                                    break;
                                case Priority.Quick:
                                    <option value="0">عادی</option>
                                    <option selected="selected" value="1">سریع</option>
                                    <option value="2">فوری</option>
                                    break;
                                case Priority.Immediately:
                                    <option value="0">عادی</option>
                                    <option value="1">سریع</option>
                                    <option selected="selected" value="2">فوری</option>
                                    break;
                                default:
                                    <option value="0">عادی</option>
                                    <option value="1">سریع</option>
                                    <option value="2">فوری</option>
                                    break;
                            }

                        </select>
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">محتوا</p>
                        <select name="ReceivedLetter.Assortment.ContentType" class="selectpicker">
                            @switch (Model.ReceivedLetter.Assortment.ContentType)
                            {
                                case ContentType.Financial:
                                    <option selected="selected" value="0">مالی</option>
                                    <option value="1">فرهنگی</option>
                                    <option value="2">علمی</option>
                                    <option value="3">تاریخی</option>
                                    <option value="4">عمرانی</option>
                                    break;
                                case ContentType.Cultural:
                                    <option value="0">مالی</option>
                                    <option selected="selected" value="1">فرهنگی</option>
                                    <option value="2">علمی</option>
                                    <option value="3">تاریخی</option>
                                    <option value="4">عمرانی</option>
                                    break;
                                case ContentType.Scientific:
                                    <option value="0">مالی</option>
                                    <option value="1">فرهنگی</option>
                                    <option selected="selected" value="2">علمی</option>
                                    <option value="3">تاریخی</option>
                                    <option value="4">عمرانی</option>
                                    break;
                                case ContentType.Historical:
                                    <option value="0">مالی</option>
                                    <option value="1">فرهنگی</option>
                                    <option value="2">علمی</option>
                                    <option selected="selected" value="3">تاریخی</option>
                                    <option value="4">عمرانی</option>
                                    break;
                                case ContentType.Construction:
                                    <option value="0">مالی</option>
                                    <option value="1">فرهنگی</option>
                                    <option value="2">علمی</option>
                                    <option value="3">تاریخی</option>
                                    <option selected="selected" value="4">عمرانی</option>
                                    break;
                                default:
                                    <option value="0">مالی</option>
                                    <option value="1">فرهنگی</option>
                                    <option value="2">علمی</option>
                                    <option value="3">تاریخی</option>
                                    <option value="4">عمرانی</option>
                                    break;
                            }

                        </select>
                    </div>
                    <div class="col-xs-3 ">
                        <p class="f-500 m-b-15 c-black">وضعیت</p>
                        <select name="ReceivedLetter.Assortment.Situation" class="selectpicker">
                            @switch (Model.ReceivedLetter.Assortment.Situation)
                            {
                                case Situation.Current:
                                    <option selected="selected" value=0>اداری - استنادی - جاری</option>
                                    <option value=1>بایگانی - اطاعتی -راکد</option>
                                    break;
                                case Situation.Stagnant:
                                    <option value=0>اداری - استنادی - جاری</option>
                                    <option selected="selected" value=1>بایگانی - اطلاعتی -راکد</option>
                                    break;
                                default:
                                    <option value=0>اداری - استنادی - جاری</option>
                                    <option value=1>بایگانی - اطلاعتی -راکد</option>
                                    break;
                            }


                        </select>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-xs-4 ">
                        <p class="c-black f-500 m-b-20">تاریخ نامه </p>
                        <div class="input-group form-group">

                            <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                            <div class="dtp-container fg-line">
                                <input id="LetterDateTimeId" name="LetterDateTime" type="text" class="form-control date-picker" placeholder="Click here..." value="@Model.ReceivedLetter.LetterDateTime.ToPersianTime()">
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4 ">

                        <p class="f-500 m-b-15 c-black">شماره نامه</p>

                        <div class="input-group fg-float">
                            <span class="input-group-addon"><i class="zmdi zmdi-email zmdi-hc-fw"></i></span>
                            <div class="fg-line">
                                <input id="focus" name="RowNumber" type="text" class="form-control" value="@Model.ReceivedLetter.RowNumber">
                            </div>
                        </div>

                    </div>
                    <div class="col-xs-4 ">
                        <p class="c-black f-500 m-b-20">انتخاب نامه والد</p>
                        <button id="SelectParentLetter" class="btn bgm-orange btn-sm waves-effect">انتخاب نامه والد</button>
                        @switch (Model.ReceivedLetter.ParentType)
                        {
                            case ParentType.Receive:
                                if (Model.ReceivedLetter.ParentReceiveLetter != null)
                                {
                                    <input type="hidden" id="ParentletterId" name="ParentletterId" value="@Model.ReceivedLetter.ParentReceiveLetter.Id" />
                                    <input type="hidden" id="ParentType" name="ReceivedLetter.ParentType" value="@ParentType.Receive" />
                                    if (String.IsNullOrEmpty(Model.ReceivedLetter.ParentReceiveLetter.RowNumber))
                                    {
                                        <span class="demotextbox1">بدون شماره</span>
                                    }
                                    else
                                    {
                                        <span class="demotextbox1">@Model.ReceivedLetter.ParentReceiveLetter.RowNumber</span>

                                    }
                                    <button type="button" id="removeParent" class="btn btn-danger btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-window-minimize"></i></button>

                                }
                                else
                                {
                                    <input type="hidden" id="ParentletterId" name="ParentletterId" />
                                    <input type="hidden" id="ParentType" name="ReceivedLetter.ParentType" value="@ParentType.Receive" />
                                    <span class="demotextbox1"></span>
                                    <button style="display: none;" type="button" id="removeParent" class="btn btn-danger btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-window-minimize"></i></button>
                                }
                                break;
                            case ParentType.Send:
                                if (Model.ReceivedLetter.ParentSendLetterOut != null)
                                {
                                    <input type="hidden" id="ParentletterId" name="ParentletterId" value="@Model.ReceivedLetter.ParentSendLetterOut.Id" />
                                    <input type="hidden" id="ParentType" name="ReceivedLetter.ParentType" value="@ParentType.Send" />
                                    if (String.IsNullOrEmpty(Model.ReceivedLetter.ParentSendLetterOut.RowNumber))
                                    {
                                        <span class="demotextbox1">بدون شماره</span>
                                    }
                                    else
                                    {
                                        <span class="demotextbox1">@Model.ReceivedLetter.ParentSendLetterOut.RowNumber</span>

                                    }
                                    <button type="button" id="removeParent" class="btn btn-danger btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-window-minimize"></i></button>

                                }
                                else
                                {
                                    <input type="hidden" id="ParentletterId" name="ParentletterId" />
                                    <input type="hidden" id="ParentType" name="ReceivedLetter.ParentType" value="@ParentType.Send" />
                                    <span class="demotextbox1"></span>
                                    <button style="display: none;" type="button" id="removeParent" class="btn btn-danger btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-window-minimize"></i></button>

                                }
                                break;
                            default:
                                break;
                        }



                    </div>

                </div>
                <br />
            </div>
            <br />
            <hr class="hr-color" />
            <div class="row">
                <div class="col-xs-5">
                    <div class="card-header">
                        <p class="c-black f-500 m-b-20">سازمان فرستنده را انتخاب کنید</p>

                    </div>
                </div>
                <div class="col-xs-7">
                    <div class="card-header">
                        @*<p class="c-black f-500 m-b-20">شخص فرستنده را انتخاب کنید</p>*@

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-5 tree-view-box">
                    <div class="demo-section k-content">
                        <div>
                            <div id="treeview1"></div>
                            @if (Model.ReceivedLetter.Sender != null && Model.ReceivedLetter.Sender.Organization != null)
                            {
                                <input id="OrganizationsGuidString" name="OrganizationGuid" type="hidden" value="@Model.ReceivedLetter.Sender.Organization.Id" />
                            }
                            else
                            {
                                <input id="OrganizationsGuidString" name="OrganizationGuid" type="hidden" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-xs-7">
                    @*post type*@
                    <div class="row">
                        <p class="f-500 c-black m-b-15">انتخاب سمت</p>

                        <select id="selectPost" name="PostGuid" class="selectpicker col-xs-6" data-live-search="true" data-none-selected-text="هیچ گزینه ای انتخاب نشده است" data-no-results-matched="هیچ سمتی یافت نشد">
                            <option selected="selected" value="">بدون سمت</option>
                            @foreach (var post in Model.Posts)
                            {
                                if (Model.ReceivedLetter.Sender != null && Model.ReceivedLetter.Sender.Post != null && Model.ReceivedLetter.Sender.Post.Id == post.Id)
                                {
                                    <option selected="selected" value="@post.Id">@post.Name</option>
                                }
                                else
                                {
                                    <option value="@post.Id">@post.Name</option>
                                }
                            }
                        </select>

                        <div class="col-sm-4 m-b-20 margin-top-20">
                            <div class="toggle-switch">
                                <input id="ts1" type="checkbox" hidden="hidden">
                                <label for="ts1" class="ts-helper"></label>
                                <label for="ts1" class="ts-label">سمت نامعلوم</label>
                            </div>
                        </div>

                    </div>

                    <br />
                    <br />
                    <p class="c-black f-500 m-b-40">انتخاب شخص</p>
                    <br />

                    <div id="tablePosition">
                        <div id="tableSection" class="table-responsive my-table-responsive c-overflow mCustomScrollbar _mCS_1 mCS-autoHide mCS-dir-rtl">
                            <table id="data-table-selection" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th data-column-id="id" data-visible="false" data-visible-in-selection="false" data-identifier="true">ID</th>
                                        <th data-column-id="Name">نام و نام خانوادگی</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.People)
                                    {
                                        <tr>
                                            <td>@item.Id</td>
                                            <td>
                                                @item.FullName()
                                            </td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                            @if (Model.ReceivedLetter.Sender != null && Model.ReceivedLetter.Sender.Person != null)
                            {
                                <input name="PersonGuid" id="PersonListString" type="hidden" value="@Model.ReceivedLetter.Sender.Person.Id" />
                            }
                            else
                            {
                                <input name="PersonGuid" id="PersonListString" type="hidden" />
                            }
                            <div id="mCSB_1_scrollbar_vertical" class="mCSB_scrollTools mCSB_1_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;">
                                <div class="mCSB_draggerContainer">
                                    <div class="mCSB_draggerRail"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <hr class="hr-color" />
            <div class="row">
                <div class="card-body card-padding">
                    <p class="c-black f-500 m-b-20">توضیحات نامه</p>
                    <div class="form-group">
                        <div class="fg-line">
                            <textarea class="form-control" rows="3" placeholder="توضیحاتی مختصر در مورد نامه" name="ReceivedLetter.Description">@Model.ReceivedLetter.Description</textarea>
                        </div>
                    </div>

                </div>
            </div>
            <br />
            <hr class="hr-color" />
            <div class="row">

                @foreach (var item in @Model.LetterFiles)
                {
                    <div class="col-xs-4 ">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="line-height: 150px;">
                                <img class="imge" src="@item.Content" />
                            </div>
                            <div class="editImage">
                                <input class="mojo" type="hidden" value="@item.Id" name="FilesId">
                                <span class="btn btn-info btn-file waves-effect">
                                    <span class="fileinput-new">انتخاب تصویر</span>
                                    <span class="fileinput-exists">تغییر</span>

                                    <input type="hidden" value="" name="...">
                                    <input class="uploadLetterFile" type="file" name="FileUploadLetters">

                                </span>
                                <button type="button" class="DeleteLetterFile btn btn-danger waves-effect">حذف</button>
                                <button type="button" class="download btn btn-file fileinput-controls waves-effect" onclick='window.location = "/IncomingLetters/DownloadFile/@item.Id"'>دانلود</button>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-xs-4 choose-file-box">
                    <h5>انتخاب فایل های نامه</h5>
                    <div class="choose-file-btns">
                        <div class='fileinput fileinput-new' data-provides='fileinput'>
                            <span class='btn btn-primary btn-file m-r-10'>
                                <span class='fileinput-new'>انتخاب فایل</span>
                                <span class='fileinput-exists'>تغییر</span>
                                <input type='file' name='FileUploadLetters'>

                            </span>
                            <span class='fileinput-filename'></span>
                            <a href='#' class='close fileinput-exists' data-dismiss='fileinput'>&times;</a>
                        </div>
                        <br />
                    </div>
                    <div class="add-new-file-btn">
                        <button class="btn btn-success btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-plus"></i></button>
                    </div>
                </div>
            </div>
            <hr class="hr-color" />
            <div class="row">

                @foreach (var item in @Model.LetterAppendages)
                {
                    <div class="col-xs-4">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="line-height: 150px;">
                                <img class="imge" src="@item.Content" />
                            </div>
                            <div class="editImage">
                                <input class="mojo2" type="hidden" value="@item.Id" name="AppendagesId">
                                <span class="btn btn-info btn-file waves-effect">
                                    <span class="fileinput-new">انتخاب تصویر</span>
                                    <span class="fileinput-exists">تغییر</span>

                                    <input type="hidden" value="" name="...">
                                    <input class="uploadAppendagesFile" type="file" name="FileUploadAppendages">

                                </span>
                                <button type="button" class="DeleteAppendagesFile btn btn-danger waves-effect">حذف</button>
                                @*<button type="button" class="download btn btn-file fileinput-controls waves-effect" onclick='var download = function(id) { var formdata = new FormData(); formdata.append("id",id);    var xhr = new XMLHttpRequest();xhr.open("POST","/IncomingLetters/DownloadAppendage");xhr.send(formdata);xhr.onreadystatechange = function () {if (xhr.readyState == 4 && xhr.status == 200) {window.location = xhr.responseText; }}};download("@item.Id");'>دانلود</button>*@
                                <button type="button" class="download btn btn-file fileinput-controls waves-effect" onclick='window.location = "/IncomingLetters/DownloadAppendage/@item.Id"'>دانلود</button>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-xs-4 choose-file-box">
                    <h5>انتخاب فایل های پیوست</h5>
                    <div class="choose-attach-file-btns">
                        <div class='fileinput fileinput-new' data-provides='fileinput'>
                            <span class='btn btn-primary btn-file m-r-10'>
                                <span class='fileinput-new'>انتخاب فایل</span>
                                <span class='fileinput-exists'>تغییر</span>
                                <input type='file' name='FileUploadAppendages'>
                            </span>
                            <span class='fileinput-filename'></span>
                            <a href='#' class='close fileinput-exists' data-dismiss='fileinput'>&times;</a>
                        </div>
                        <br />
                    </div>
                    <div class="add-new--attach-file-btn">
                        <button class="btn btn-success btn-icon waves-effect waves-circle waves-float margin-right-70"><i class="zmdi zmdi-plus"></i></button>
                    </div>
                </div>
            </div>


            <br />
            <hr class="hr-color" />
            <div class="row">
                <div class="col-xs-12">
                    <div class="col-xs-4"></div>
                    <div class="col-xs-2">
                        <button id="sendForm" type="submit" class="btn bgm-red btn-lg waves-effect">ذخیره</button>
                    </div>
                    <div class="col-xs-2">
                        <button type="button" onclick="window.location ='@Url.Action("Index")'" class="btn bgm-red btn-lg waves-effect" value="Save And Show">انصراف</button>
                    </div>
                    <div class="col-xs-4">
                        @*<button id="sendForm2" type="submit" class="btn bgm-red btn-lg waves-effect" value="Save And Show">ذخیره و مشاهده</button>*@
                    </div>
                </div>

            </div>
        </div>

    </div>

</form>
<div id="test" style="width: 850px; height: 600px;display: none">
    <iframe width="850" height="600" src='/AdvanceSearch/Index?showSelect=true&letterID=@Model.ReceivedLetter.Id&letterType=@ParentType.Receive&selector =".demotextbox1",window.opener.document'></iframe>
</div>

@section Scripts{
    <script>
        var chooseFileBtn0 = "<div class='fileinput fileinput-new' data-provides='fileinput'>" +
            "<span class='btn btn-primary btn-file m-r-10'><span class='fileinput-new'>" +
            "انتخاب فایل</span><span class='fileinput-exists'>تغییر</span><input type=" +
            "'file' name='FileUploadLetters'></span><span class='fileinput-filename'></span><a href=" +
            "'#' class='close fileinput-exists' data-dismiss='fileinput'>&times;</a></div><br />";

        var chooseFileBtn1 = "<div class='fileinput fileinput-new' data-provides='fileinput'>" +
            "<span class='btn btn-primary btn-file m-r-10'><span class='fileinput-new'>" +
            "انتخاب فایل</span><span class='fileinput-exists'>تغییر</span><input type=" +
            "'file' name='FileUploadAppendages'></span><span class='fileinput-filename'></span><a href=" +
            "'#' class='close fileinput-exists' data-dismiss='fileinput'>&times;</a></div><br />";

        $(".add-new-file-btn")
            .click(function () {
                $(".choose-file-btns").append(chooseFileBtn0);
                return false;
            });
        $(".add-new--attach-file-btn")
            .click(function () {
                $(".choose-attach-file-btns").append(chooseFileBtn1);
                return false;
            });
    </script>
}
@section OurScripts {
    <script src="~/vendors/bower_components/chosen/chosen.jquery.min.js"></script>
    <script src="~/vendors/fileinput/fileinput.min.js"></script>
    <script src="~/vendors/input-mask/input-mask.min.js"></script>
    <script src="~/vendors/farbtastic/farbtastic.min.js"></script>

    <script src="~/vendors/bootgrid/jquery.bootgrid.updated.min.js"></script>
    <script src="~/vendors/summernote/dist/summernote-updated.min.js"></script>

    <script src="~/js/kendo.all.min.js"></script>
    <script src="~/js/console.js"></script>

    <script src="~/js/demo.js"></script>
    <script src="~/js/bpopup.js"></script>



    <script>
        //Part 1 - tree view of Organizations
        //Binding json of this user showable organizations from server
        var json1 = @Html.Raw(Model.OrganizationJson);

        //Initialize selected Node from server
        @if (Model.ReceivedLetter.Sender != null && Model.ReceivedLetter.Sender.Organization != null)
        {
            <text>
        var selectedOrganizationId ="@Model.ReceivedLetter.Sender.Organization.Id";

        </text>
        }
        else
        {
            <text>
        var selectedOrganizationId = undefined;
        </text>
        }

        //initial tree view
        $("#treeview1")
            .kendoTreeView({
                //checkboxes: {
                //    checkChildren: true
                //},
                checkboxes: true,
                dataSource: json1,
                //on check it will call onCheck Function - this would save state of selected nodes + ajax to manipulate bootgrid
                check: onCheck

            });

        // function that gathers IDs of checked nodes- this function is shared between all tree views
        function checkedNodeIds(nodes, checkedNodes) {
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].checked) {
                    checkedNodes.push(nodes[i].id);
                }

                if (nodes[i].hasChildren) {
                    checkedNodeIds(nodes[i].children.view(), checkedNodes);
                }
            }
        }

        // show checked node IDs on datasource change + ajax to server for people list of those selected organizations
        function onCheck(e) {
            var checkedNodes = [],
                treeView = $("#treeview1").data("kendoTreeView"),
                message;

            //this seciton is for multiple select only
            //checkedNodeIds(treeView.dataSource.view(), checkedNodes);

            var dataItem = this.dataItem(e.node);

            //Quick Fix for 1 selected item
            if (dataItem.checked) {
                checkedNodes = [dataItem.id];
                selectedOrganizationId = checkedNodes;
            } else {
                checkedNodes = [];
                selectedOrganizationId = undefined;
            }


            var selectedPostID = $("#selectPost").val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetPersons", "IncomingLetters")',
                data: JSON.stringify({
                    idList: checkedNodes,
                    postGuid: selectedPostID,
                    noPost: $("#ts1").is(":checked")
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: successFunc1,
                error: errorFunc1
            });


            var rootNodes = $("#treeview1").getKendoTreeView().dataSource.data();

            traverse1(rootNodes,
                function(node) {
                    if (node != dataItem) {
                        node.set("checked", false);
                    }
                });





        }


        function traverse1(nodes, callback) {
            for (var i = 0; i < nodes.length; i++) {
                var node = nodes[i];
                var children = node.hasChildren && node.children.data();

                callback(node);

                if (children) {
                    traverse1(children, callback);
                }
            }
        }

        var hiddenSelectedOrganization = "";
        var hiddenSelectedPerson = "";
        var hiddenSelectedPost = "";
        //Functions to ajax treeView1
        function successFunc1(data, status) {
            if ($("#ts1").is(":checked")&&selectedOrganizationId) {
                $("#tablePosition")
                    .fadeOut(function() {
                        $("#tableSection").remove();
                        $("#tablePosition").html("");

                        var rowcounter = 0;
                        var htmlString =
                            '<div id="tableSection" class="table-responsive my-table-responsive c-overflow mCustomScrollbar _mCS_1 mCS-autoHide mCS-dir-rtl"><table id="data-table-selection" class="table table-striped"><thead><tr><th data-column-id="id" data-visible="false" data-visible-in-selection="false">ID</th><th data-column-id="rowNumber"  data-identifier="true">ردیف</th><th data-column-id="Name">نام و نام خانوادگی</th><th data-column-id="Post">سمت</th><th data-column-id="postID" data-visible="false" data-visible-in-selection="false">PostID</th><th data-column-id="organizationID" data-visible="false" data-visible-in-selection="false">OrganizaitionID</th></tr></thead><tbody>';
                        data.forEach(function(item) {
                            htmlString += '<tr><td>' +
                                item.Id +
                                '</td><td>' +
                                ++rowcounter +
                                '</td><td>' +
                                item.FirstName +
                                " " +
                                item.LastName +
                                '</td><td>' +
                                item.Name +
                                " " +
                                item.organizationName +
                                '</td><td>' +
                                item.postID +
                                '</td><td>' +
                                item.organizationID +
                                '</td></tr>';
                        });

                        htmlString +=
                            '</tbody></table><input name="PersonGuid" id="PersonListString" type="hidden" /><div id="mCSB_1_scrollbar_vertical" class="mCSB_scrollTools mCSB_1_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;"><div class="mCSB_draggerContainer"><div class="mCSB_draggerRail"></div></div></div></div>';


                        $("#tablePosition").append($(htmlString));

                        $("#tablePosition").fadeIn();


                        $("#data-table-selection")
                            .bootgrid({
                                css: {
                                    icon: 'zmdi icon',
                                    iconColumns: 'zmdi-view-module',
                                    iconDown: 'zmdi-expand-more',
                                    iconRefresh: 'zmdi-refresh',
                                    iconUp: 'zmdi-expand-less'
                                },
                                selection: true,
                                multiSelect: false,
                                rowSelect: true,
                                keepSelection: true
                            })
                            .on("loaded.rs.jquery.bootgrid",
                                function(e) {
                                    /* your code goes here */
                                    //Fix Click on Bootgrid
                                    $("#data-table-selection div.checkbox")
                                        .click(function() {
                                            $(this).parent().parent().click();
                                        });

                                    //Select and deselect if cant there is not specific input for post organization and person
                                    $(this)
                                        .on("selected.rs.jquery.bootgrid",
                                            function(e, x) {
                                                /* your code goes here */
                                                hiddenSelectedPerson = x[0].id;
                                                hiddenSelectedOrganization = x[0].organizationID;
                                                hiddenSelectedPost = x[0].postID;
                                            });

                                    $(this)
                                        .on("deselected.rs.jquery.bootgrid",
                                            function(e, x) {
                                                /* your code goes here */
                                                hiddenSelectedPerson = "";
                                                hiddenSelectedOrganization = "";
                                                hiddenSelectedPost = "";
                                            });

                                });


                    });
            } else {
                $("#tablePosition")
                    .fadeOut(function() {
                        $("#tableSection").remove();
                        $("#tablePosition").html("");


                        var htmlString =
                            '<div id="tableSection" class="table-responsive my-table-responsive c-overflow mCustomScrollbar _mCS_1 mCS-autoHide mCS-dir-rtl"><table id="data-table-selection" class="table table-striped"><thead><tr><th data-column-id="id" data-visible="false" data-visible-in-selection="false" data-identifier="true">ID</th><th data-column-id="Name">نام و نام خانوادگی</th></tr></thead><tbody>';
                        data.forEach(function(item) {
                            htmlString += '<tr><td>' +
                                item.Id +
                                '</td><td>' +
                                item.FirstName +
                                " " +
                                item.LastName +
                                '</td></tr>';
                        });

                        htmlString +=
                            '</tbody></table><input name="PersonGuid" id="PersonListString" type="hidden" /><div id="mCSB_1_scrollbar_vertical" class="mCSB_scrollTools mCSB_1_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;"><div class="mCSB_draggerContainer"><div class="mCSB_draggerRail"></div></div></div></div>';


                        $("#tablePosition").append($(htmlString));

                        $("#tablePosition").fadeIn();


                        $("#data-table-selection")
                            .bootgrid({
                                css: {
                                    icon: 'zmdi icon',
                                    iconColumns: 'zmdi-view-module',
                                    iconDown: 'zmdi-expand-more',
                                    iconRefresh: 'zmdi-refresh',
                                    iconUp: 'zmdi-expand-less'
                                },
                                selection: true,
                                multiSelect: false,
                                rowSelect: true,
                                keepSelection: true
                            })
                            .on("loaded.rs.jquery.bootgrid",
                                function(e) {
                                    /* your code goes here */
                                    //Fix Click on Bootgrid
                                    $("#data-table-selection div.checkbox")
                                        .click(function() {
                                            $(this).parent().parent().click();
                                        });

                                    //$("#sendForm").click(function() {
                                    //    alert()
                                    //    return false;
                                    //});
                                });


                    });
            }
        }


        function errorFunc1(e) {
            console.log(e);
        }

        //Set Onchange of Post
        $("#selectPost")
            .change(function(e) {
                var selectedPostId = $(this).val();
                if (selectedOrganizationId)
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetPersons", "IncomingLetters")',
                        data: JSON.stringify({
                            idList: selectedOrganizationId,
                            postGuid: selectedPostId,
                            noPost: false
                        }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: successFunc1,
                        error: errorFunc1
                    });
            });


        //Select FirstTime
        if (selectedOrganizationId) {
            var treeview1 = $("#treeview1").data("kendoTreeView");
            var getitem = treeview1.dataSource.get(selectedOrganizationId);
            var item = treeview1.findByUid(getitem.uid);
            treeview1.dataItem(item).set("checked", true);
        }

        $("#sendForm")
          .click(function() {
              if (!$("#ts1").is(":checked")) {
                  $("#OrganizationsGuidString").val('' + selectedOrganizationId);
                  $("#PersonListString")
                      .val($("#data-table-selection")
                          .bootgrid("getSelectedRows"));
              } else {
                  $("#selectPost").removeAttr('disabled').val(hiddenSelectedPost).selectpicker("refresh");
                  $("#OrganizationsGuidString").val('' + hiddenSelectedOrganization);
                  $("#PersonListString")
                      .val('' + hiddenSelectedPerson);
              }
              console.log(hiddenSelectedPost + " " + hiddenSelectedOrganization + " " + hiddenSelectedPerson);
              return true;
          });


    </script>

    <script type="text/javascript">
        $(document)
            .ready(function () {
                var x = [];
                @if (Model.ReceivedLetter.Sender?.Person != null)
                {
                    <text>
                x.push("@Model.ReceivedLetter.Sender.Person.Id");
                </text>
                }



                //First initialization of person bootgrid to show server side returned people
                $("#data-table-selection")
                    .bootgrid({
                        css: {
                            icon: 'zmdi icon',
                            iconColumns: 'zmdi-view-module',
                            iconDown: 'zmdi-expand-more',
                            iconRefresh: 'zmdi-refresh',
                            iconUp: 'zmdi-expand-less'
                        },
                        selection: true,
                        multiSelect: false,
                        rowSelect: true,
                        keepSelection: true
                    })
                    .on("loaded.rs.jquery.bootgrid",
                        function (e) {
                             $("#data-table-selection div.checkbox")
                                .click(function() {
                                    $(this).parent().parent().click();
                                });

                            $("#data-table-selection")
                                .bootgrid("select", x);

                        });
                //set letterDateTime

                //Handle Page Buttons
                $("#SelectParentLetter")
                    .click(function () {
                        $("#test")
                            .bPopup({
                                content: 'iframe', //'ajax', 'iframe' or 'image'
                                contentContainer: '.content'
                                //loadUrl: 'http://dinbror.dk/blog' //Uses jQuery.load()
                            });

                        return false;
                    });

                function htmlEncode(value) {
                    return $('<div/>').text(value).html();
                }

                //$("#sendForm")
                //    .click(function () {
                //        $("#PersonListString")
                //            .val($("#data-table-selection")
                //                .bootgrid("getSelectedRows"));
                //        $("#InputCases").val($('#SelectedCases').val());
                //    });
                $("#LetterDateTimeId").focus();
                $("#focus").focus();
            });

        $(function () {
            $(".DeleteAppendagesFile").click(function () {
                $(this).parent().children("input[name='AppendagesId']").val("");
                $(this).parent().parent().children(".thumbnail").children(".imge").fadeOut();
            });

            $(".uploadAppendagesFile").change(function () {
                $(this).parent().parent().children("input[name='AppendagesId']").val("");
            });

            $(".DeleteLetterFile").click(function () {
                $(this).parent().children("input[name='FilesId']").val("");
                $(this).parent().parent().children(".thumbnail").children(".imge").fadeOut();
            });

            $(".uploadLetterFile").change(function () {
                $(this).parent().parent().children("input[name='FilesId']").val("");
            });

            //remove parent section
            $("#removeParent").click(function() {

                $(this).fadeOut(function() {
                    $("#ParentletterId").val("");
                    $(".demotextbox1").text("");
                });


            });

            //Turn off Post
            $("#ts1")
                .change(function() {
                    if ($(this).is(":checked")) {
                        $("#selectPost").attr('disabled', true).selectpicker("refresh");
                        if (selectedOrganizationId) {

                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("GetPersons", "IncomingLetters")',
                                data: JSON.stringify({
                                    idList: selectedOrganizationId,
                                    postGuid: "",
                                    noPost: true
                                }),
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: successFunc1,
                                error: errorFunc1
                            });
                        }

                    } else {
                        $("#selectPost").removeAttr('disabled').selectpicker("refresh").change();
                    }
                });
        });
    </script>
    <script src="@Url.Content("~/vendors/bower_components/lightgallery/light-gallery/js/lightGallery.min.js")"></script>
    <style>
        #treeview1 {
            height: 630px;
            padding: 10px;
        }

        #treeview2 {
            height: 630px;
            padding: 10px;
        }

            #treeview1 .k-sprite, #treeview2 .k-sprite {
                background-image: url("../img/coloricons-sprite.png");
            }

        .rootfolder {
            background-position: 0 0;
        }

        .folder {
            background-position: 0 -16px;
        }

        .pdf {
            background-position: 0 -32px;
        }

        .html {
            background-position: 0 -48px;
        }

        .image {
            background-position: 0 -64px;
        }

        .demo-section {
            direction: ltr;
        }

        .my-table-responsive {
            height: 650px;
        }

        .demo-section #treeview1, .demo-section #treeview2 {
            background-color: #f4f4f4;
        }


        /* RTL TreeView*/
        #treeview1, #treeview2 {
            direction: rtl;
        }

        .k-icon.k-minus, .k-icon.k-plus {
            margin-left: 0;
        }

        .k-group > .k-item {
            margin-right: 16px !important;
        }

            .k-group > .k-item.k-first.k-last {
                margin-right: 0 !important;
            }

        .k-group .k-item .k-group {
            margin-right: 16px;
        }

        .k-item.k-first.k-last .k-top {
            margin-right: 0;
        }

        .k-treeview1 .k-sprite, .k-treeview1 .k-image {
            margin-left: 5px;
        }
    </style>
}